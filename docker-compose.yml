version: "3.9"

networks:
  my-network:
    driver: bridge

services:
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./certs:/mosquitto/config/certs
      - mosquitto_data:/mosquitto/data
    networks:
      - my-network

  central-node:
    build:
      context: ./central_node
      dockerfile: Dockerfile
    container_name: central-node-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - TOPIC=central_node/decisions
      - FLASK_PORT=5000
    volumes:
      - ./certs:/certs
    ports:
      - "5006:5000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
    networks:
      - my-network

  local-node-1:
    build:
      context: ./local_node
      dockerfile: Dockerfile
    container_name: local-node-1-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - NODE_ID=local-node-1
      - TOPIC=sensor/lidar/1
      - CLIENT_ORDER=1
      - FLASK_PORT=5000
    volumes:
      - ./certs:/certs
    ports:
      - "5002:5000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
    networks:
      - my-network

  local-node-2:
    build:
      context: ./local_node
      dockerfile: Dockerfile
    container_name: local-node-2-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - NODE_ID=local-node-2
      - TOPIC=sensor/lidar/2
      - CLIENT_ORDER=2
      - FLASK_PORT=5000
    volumes:
      - ./certs:/certs
    ports:
      - "5003:5000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
    networks:
      - my-network

  local-node-3:
    build:
      context: ./local_node
      dockerfile: Dockerfile
    container_name: local-node-3-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - NODE_ID=local-node-3
      - TOPIC=sensor/lidar/3
      - CLIENT_ORDER=3
      - FLASK_PORT=5000
    volumes:
      - ./certs:/certs
    ports:
      - "5004:5000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
    networks:
      - my-network

  local-node-4:
    build:
      context: ./local_node
      dockerfile: Dockerfile
    container_name: local-node-4-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - NODE_ID=local-node-4
      - TOPIC=sensor/lidar/4
      - CLIENT_ORDER=4
      - FLASK_PORT=5000
    volumes:
      - ./certs:/certs
    ports:
      - "5005:5000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
    networks:
      - my-network

  sensor-node-1:
    build:
      context: ./sensor_node
      dockerfile: Dockerfile
    container_name: sensor-node-1-container
    depends_on:
      - mqtt-broker
    environment:
      - SUMO_HOST=host.docker.internal # Conexi贸n al host local
      - SUMO_PORT=8813
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - TOPIC=sensor/lidar/1
      - CLIENT_ORDER=1
      - SENSOR_INDEX=0
    volumes:
      - ./certs:/certs
    networks:
      - my-network

  sensor-node-2:
    build:
      context: ./sensor_node
      dockerfile: Dockerfile
    container_name: sensor-node-2-container
    depends_on:
      - mqtt-broker
    environment:
      - SUMO_HOST=host.docker.internal # Conexi贸n al host local
      - SUMO_PORT=8813
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - TOPIC=sensor/lidar/2
      - CLIENT_ORDER=2
      - SENSOR_INDEX=1
    volumes:
      - ./certs:/certs
    networks:
      - my-network

  sensor-node-3:
    build:
      context: ./sensor_node
      dockerfile: Dockerfile
    container_name: sensor-node-3-container
    depends_on:
      - mqtt-broker
    environment:
      - SUMO_HOST=host.docker.internal # Conexi贸n al host local
      - SUMO_PORT=8813
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - TOPIC=sensor/lidar/3
      - CLIENT_ORDER=3
      - SENSOR_INDEX=2
    volumes:
      - ./certs:/certs
    networks:
      - my-network

  sensor-node-4:
    build:
      context: ./sensor_node
      dockerfile: Dockerfile
    container_name: sensor-node-4-container
    depends_on:
      - mqtt-broker
    environment:
      - SUMO_HOST=host.docker.internal # Conexi贸n al host local
      - SUMO_PORT=8813
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
      - TOPIC=sensor/lidar/4
      - CLIENT_ORDER=4
      - SENSOR_INDEX=3
    volumes:
      - ./certs:/certs
    networks:
      - my-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    ports:
      - "8080:80"
    depends_on:
      - mqtt-broker
    environment:
      - VITE_MQTT_BROKER_URL=ws://mqtt-broker:9001
    networks:
      - my-network

  monitoring-node:
    build:
      context: ./monitoring_node
      dockerfile: Dockerfile
    container_name: monitoring-node-container
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_HOST=mqtt-broker
      - MQTT_BROKER_PORT=8883
    volumes:
      - ./certs:/certs
    networks:
      - my-network
    ports:
      - "5001:5001"

volumes:
  mosquitto_data:
